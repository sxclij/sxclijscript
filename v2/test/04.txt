main()
eternal_sleep()

fn putc(ch) (
    write(1, addr(ch), 1)
)
fn print_int(x) (
    set(addr(a), 0)
    set(addr(m), 1000000000)
    if(x.lt(0)) (
        putc(45)
        set(addr(x), x.mul(-1))
    )
    if(x.eq(0)) (
        putc(48)
        return(0)
    )
    loop(
        if(x.div(m).eq(0).not()) (
            break
        )
        set(addr(m), m.div(10))
    )
    loop(
        if(m.eq(0)) (
            return(0)
        )
        putc(x.div(m).mod(10).add(48))
        set(addr(m), m.div(10))
    )
)
fn print_endl() (
    putc(10)
)
fn eternal_sleep() (
    loop()
)
fn helloworld() (
    set(addr(null), 0)
    set(addr(space), 32)
    set(addr(a), 97)
    set(addr(b), 98)
    set(addr(c), 99)
    set(addr(d), 100)
    set(addr(e), 101)
    set(addr(f), 102)
    set(addr(g), 103)
    set(addr(h), 104)
    set(addr(i), 105)
    set(addr(j), 106)
    set(addr(k), 107)
    set(addr(l), 108)
    set(addr(m), 109)
    set(addr(n), 110)
    set(addr(o), 111)
    set(addr(p), 112)
    set(addr(q), 113)
    set(addr(r), 114)
    set(addr(s), 115)
    set(addr(t), 116)
    set(addr(u), 117)
    set(addr(v), 118)
    set(addr(w), 119)
    set(addr(x), 120)
    set(addr(y), 121)
    set(addr(z), 122)
    set(addr(str1_01), h)
    set(addr(str1_02), e)
    set(addr(str1_03), l)
    set(addr(str1_04), l)
    set(addr(str1_05), o)
    set(addr(str1_06), space)
    set(addr(str1_07), w)
    set(addr(str1_08), o)
    set(addr(str1_09), r)
    set(addr(str1_10), l)
    set(addr(str1_11), d)
    set(addr(str1_12), null)
    write(1, addr(str1_01), 12)
)

fn main() (
    set(addr(ip), 0)
    set(addr(sp), 1)
    set(addr(bp), 2)
    set(sp, get(sp).add(1000))
    set(addr(v), get(bp).add(100))
    set(addr(s), helloworld())
    set(addr(s), print_endl())
)